package abc.oracle.apps.fnd.schema.server;

import oracle.apps.fnd.framework.server.OAEntityDefImpl;
import oracle.apps.fnd.framework.server.OAEntityImpl;

import oracle.jbo.AttributeList;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.RowID;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxabcDeptEOImpl extends OAEntityImpl {
    public static final int DEPTNO = 0;
    public static final int DNAME = 1;
    public static final int LOC = 2;
    public static final int ROWID = 3;
    private static OAEntityDefImpl mDefinitionObject;

    /**This is the default constructor (do not remove)
     */
    public XxabcDeptEOImpl() {
    }

    /**Retrieves the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = 
                    (OAEntityDefImpl)EntityDefImpl.findDefObject("abc.oracle.apps.fnd.schema.server.XxabcDeptEO");
        }
        return mDefinitionObject;
    }

    /**Add attribute defaulting logic in this method.
     */
    public void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**Add Entity validation code in this method.
     */
    protected void validateEntity() {
        super.validateEntity();
    }

    /**Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**Custom DML update/insert/delete logic here.
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }

    /**Gets the attribute value for Deptno, using the alias name Deptno
     */
    public Number getDeptno() {
        return (Number)getAttributeInternal(DEPTNO);
    }

    /**Sets <code>value</code> as the attribute value for Deptno
     */
    public void setDeptno(Number value) {
        setAttributeInternal(DEPTNO, value);
    }

    /**Gets the attribute value for Dname, using the alias name Dname
     */
    public String getDname() {
        return (String)getAttributeInternal(DNAME);
    }

    /**Sets <code>value</code> as the attribute value for Dname
     */
    public void setDname(String value) {
        setAttributeInternal(DNAME, value);
    }

    /**Gets the attribute value for Loc, using the alias name Loc
     */
    public String getLoc() {
        return (String)getAttributeInternal(LOC);
    }

    /**Sets <code>value</code> as the attribute value for Loc
     */
    public void setLoc(String value) {
        setAttributeInternal(LOC, value);
    }

    /**Gets the attribute value for RowID, using the alias name RowID
     */
    public RowID getRowID() {
        return (RowID)getAttributeInternal(ROWID);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case DEPTNO:
            return getDeptno();
        case DNAME:
            return getDname();
        case LOC:
            return getLoc();
        case ROWID:
            return getRowID();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case DEPTNO:
            setDeptno((Number)value);
            return;
        case DNAME:
            setDname((String)value);
            return;
        case LOC:
            setLoc((String)value);
            return;
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }

    public void setCreationDate(Date date) {
    }

    public void setCreatedBy(Number number) {
    }

    public void setLastUpdateDate(Date date) {
    }

    public void setLastUpdatedBy(Number number) {
    }

    public void setLastUpdateLogin(Number number) {
    }
}
